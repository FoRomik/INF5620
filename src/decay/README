Overview of files:

dc_v1.py: simple program for solving u'=-a*u, u(0)=I by the theta-rule
dc_verf1.py: as dc_v1.py, but with a verification function
dc_verf2.py: like dc_verf1.py, but with a better verification function
dc_plot_mpl.py: as dc_verf2.py, but with Matplotlib plotting
dc_plot_st.py: as dc_plot_mpl.py, but with SciTools plotting
dc_cml.py: as dc_plot_mpl.py, but with input data on the command line
dc_argparse.py: as dc_cml.py, but using ArgumentParser for reading the command line
dc_convrate.py: as dc_argparse.py, with computation of convergence rates
dc_mod.py: module summarizing the programs above
dc_mod_prefix.py: as dc_mod.py, but using module prefixes
test/test_dc_unittest.py: as dc_mod.py, but aimed at unit tests
test/test_dc_nose.py: as dc_mod.py, but aimed at unit tests with nose
dc_mod_doctest.py: as dc_mod.py, but with doctests
dc_class.py: use class Problem and Solver instead of plain functions
dc_class_oo.py: as dec_class.py, but using inheritance for many parameters
dc_osc_regions.py: empirical investigation of oscillating solutions
dc_odespy.py: application of odespy to solve u'=-a*u equation
dc_memsave.py: as dc_verf2.py, dc_plot_mpl.py, and dc_argparse.py, but the
           implementation minimizes memory usage and stores u in a file
dc_vc.py: as dc_verf1.py, but for time-dependent coefficients, u'=-a(t)*u+b(t)
dc_ampf_plot.py: plotting of amplification factors
dc_analysis.py: theoretical analysis of amplification factors
clean.sh: remove all files that can be regenerated
