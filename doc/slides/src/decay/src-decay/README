Overview of files:

decay_v1.py: simple program for solving u'=-a*u, u(0)=I by the theta-rule
decay_verf1.py: as decay_v1.py, but with a verification function
decay_verf2.py: like decay_verf1.py, but with a better verification function
decay_plot_mpl.py: as decay_verf2.py, but with Matplotlib plotting
decay_plot_st.py: as decay_plot_mpl.py, but with SciTools plotting
decay_cml.py: as decay_plot_mpl.py, but with input data on the command line
decay_argparse.py: as decay_cml.py, but using ArgumentParser for reading the command line
decay_convrate.py: as decay_argparse.py, with computation of convergence rates
decay_mod.py: module summarizing the programs above
decay_mod_prefix.py: as decay_mod.py, but using module prefixes
test/test_decay_unittest.py: as decay_mod.py, but aimed at unit tests
test/test_decay_nose.py: as decay_mod.py, but aimed at unit tests with nose
decay_mod_doctest.py: as decay_mod.py, but with doctests
decay_class.py: use class Problem and Solver instead of plain functions
decay_class_oo.py: as dec_class.py, but using inheritance for many parameters
decay_osc_regions.py: empirical investigation of oscillating solutions
decay_odespy.py: application of odespy to solve u'=-a*u equation
decay_memsave.py: as decay_verf2.py, decay_plot_mpl.py, and decay_argparse.py, but the
           implementation minimizes memory usage and stores u in a file
decay_vc.py: as decay_verf1.py, but for time-dependent coefficients, u'=-a(t)*u+b(t)
decay_ampf_plot.py: plotting of amplification factors
decay_analysis.py: theoretical analysis of amplification factors
clean.sh: remove all files that can be regenerated
