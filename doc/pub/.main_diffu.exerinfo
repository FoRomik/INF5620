
# Information about all exercises in the file main_diffu.do.txt.
# The information can be loaded into a Python list of dicts by
#
# f = open('.main_diffu.exerinfo', 'r')
# exer = eval(f.read())
#
[{'answer': '',
  'closing_remarks': '',
  'file': ['diffu_symmetric_gaussian.py'],
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 1,
  'solution': '',
  'solution_file': None,
  'subex': [{'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'The solution (ref{diffu:pde1:sol:Gaussian}) is seen to be symmetric\nat $x=c$, because $\\partial u/\\partial x =0$ always vanishes for\n$x=c$. Use this property to formulate a complete initial boundary\nvalue problem in 1D involving the diffusion equation $u_t=\\alpha u_{xx}$\non $[0,L]$ with $u_x(0,t)=0$ and $u(L,t)$ known.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Use the exact solution to set up a convergence rate test for an\nimplementation of the problem. Investigate if a one-sided\ndifference for $u_x(0,t)$, say $u_0=u_1$, destroys the second-order\naccuracy in space.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Imagine that we want to solve the problem numerically on\n$[0,L]$, but we do not know the exact solution and cannot of that\nreason assign a correct Dirichlet condition at $x=L$.\nOne idea is to simply set $u(L,t)=0$ since this will be an\naccurate approximation before the diffused pulse reaches $x=L$\nand even thereafter it might be a satisfactory condition.\nLet $\\uex$ be the exact solution and let $u$ be the solution\nof $u_t=\\alpha u_{xx}$ with an initial Gaussian pulse and\nthe boundary conditions $u_x(0,t)=u(L,t)=0$. Derive a diffusion\nproblem for the error $e=\\uex - u$. Solve this problem\nnumerically using an exact Dirichlet condition at $x=L$.\nAnimate the evolution of the error and make a curve plot of\nthe error measure\n\n!bt\n\\[ E(t)=\\sqrt{\\frac{\\int_0^L e^2dx}{\\int_0^L udx}}\\tp \\]\n\n!et\nIs this a suitable error measure for the present problem?'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': "Instead of using $u(L,t)=0$ as approximate boundary condition for\nletting the diffused Gaussian pulse out of our finite domain,\none may try $u_x(L,t)=0$ since the solution for large $t$ is\nquite flat. Argue that this condition gives a completely wrong\nasymptotic solution as $t\\rightarrow 0$. To do this,\nintegrate the diffusion equation from $0$ to $L$, integrate\n$u_{xx}$ by parts (or use Gauss' divergence theorem in 1D) to\narrive at the important property\n\n!bt\n\\[ \\frac{d}{dt}\\int_{0}^L u(x,t)dx = 0,\\]\n\n!et\nimplying that $\\int_0^Ludx$ must be constant in time, and therefore\n\n!bt\n\\[ \\int_{0}^L u(x,t)dx = \\int_{0}^LI(x)dx\\tp \\]\n\n!et\nThe integral of the initial pulse is 1."},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Another idea for an artificial boundary condition at $x=L$\nis to use a cooling law\n\n!bt\n\\begin{equation}\n-\\alpha u_x = q(u - u_S),\nlabel{diffu:pde1:Gaussian:xL:cooling}\n\\end{equation}\n\n!et\nwhere $q$ is an unknown heat transfer coefficient and $u_S$ is\nthe surrounding temperature in the medium outside of $[0,L]$.\n(Note that arguing that $u_S$ is approximately $u(L,t)$ gives\nthe $u_x=0$ condition from the previous subexercise that is\nqualitatively wrong for large $t$.)\nDevelop a diffusion problem for the error in the solution using\n(ref{diffu:pde1:Gaussian:xL:cooling}) as boundary condition.\nAssume one can take $u_S=0$ "outside the domain"\nas $u\\rightarrow 0$ for $x\\rightarrow\\infty$.\nFind a function $q=q(t)$ such that the exact solution\nobeys the condition (ref{diffu:pde1:Gaussian:xL:cooling}).\nTest some constant values of $q$ and animate how the corresponding\nerror function behaves. Also compute $E(t)$ curves as suggested in\nsubexercise b).'}],
  'text': 'This exercise explores the exact solution (ref{diffu:pde1:sol:Gaussian}).\nWe shall formulate a diffusion problem in half of the domain for\nhalf of the Gaussian pulse. Then we shall investigate the\nimpact of using an incorrect boundary condition, which we in\ngeneral cases often are forced due if the solution needs to pass\nthrough finite boundaries undisturbed.',
  'title': 'Use an analytical solution to formulate a 1D test',
  'type': 'Exercise',
  'type_visible': True},
 {'answer': '',
  'closing_remarks': '',
  'file': ['diffu_symmetric_gaussian_2D.pdf'],
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 2,
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'Generalize (ref{diffu:pde1:sol:Gaussian}) to multi dimensions by\nassuming that one-dimensional solutions can be multiplied to solve\n$u_t = \\alpha\\nabla^2 u$.\nUse this solution to formulate a 2D test case where the peak of\nthe Gaussian is at the origin and where the domain is a\nrectangule in the first quadrant. Use symmetry boundary\nconditions $\\partial u/\\partial n=0$ whereever possible, and use\nexact Dirichlet conditions on the remaining boundaries.',
  'title': 'Use an analytical solution to formulate a 2D test',
  'type': 'Exercise',
  'type_visible': True},
 {'answer': '',
  'closing_remarks': '',
  'file': ['diffu_stab_uterm.pdf'],
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': 'diffu:exer:uterm',
  'no': 3,
  'solution': '',
  'solution_file': None,
  'subex': [{'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Derive in detail a Forward Euler scheme, a Backward Euler scheme,\nand a Crank-Nicolson for this type of diffusion model.\nThereafter, formulate a $\\theta$-rule to summarize the three schemes.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Assume a solution like (ref{diffu:pde1:sol1}) and find the relation\nbetween $a$, $k$, $\\alpha$, and $\\beta$.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Calculate the stability of the Forward Euler scheme. Design\nnumerical experiments to confirm the results.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Repeat c) for the Backward Euler scheme.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Repeat c) for the Crank-Nicolson scheme.'},
            {'answer': '',
             'file': None,
             'hints': ['Compare the numerical and exact amplification factors, either in\ngraphs or by Taylor series expansion (or both).'],
             'solution': '',
             'text': 'How does the extra term $bu$ impact the accuracy of the three schemes?'}],
  'text': 'Consider a diffusion equation with a linear $u$ term:\n\n!bt\n\\[ u_t = \\alpha u_{xx} + \\beta u\\tp\\]\n\n!et',
  'title': 'Examine stability of a diffusion model with a source term',
  'type': 'Exercise',
  'type_visible': True},
 {'answer': '',
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': 'diffu:exer:CN:Rannacher',
  'no': 4,
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'It is well known that the Crank-Nicolson method may give rise to\nnon-physical oscillations in the solution of diffusion equations\nif the initial data exhibit jumps (see Section ref{diffu:pde1:analysis:CN}).\nRannacher cite{Rannacher_1984} suggested a stabilizing technique\nconsisting of using the Backward Euler scheme for the first two\ntime steps with step length $\\half\\Delta t$. One can generalize\nthis idea to taking $2m$ time steps of size $\\half\\Delta t$ with\nthe Backward Euler method and then continuing with the\nCrank-Nicolson method, which is of second-order in time.\nThe idea is that the high frequencies of the initial solution are\nquickly damped out, and the Backward Euler scheme treats these\nhigh frequencies correctly. Thereafter, the high frequency content of\nthe solution is gone and the Crank-Nicolson method will do well.\n\nTest this idea for $m=1,2,3$ on a diffusion problem with a\ndiscontinuous initial condition. Measure the convergence rate using\nthe solution (ref{diffu:analysis:pde1:step:erf:sol}) with the boundary\nconditions\n(ref{diffu:analysis:pde1:p1:erf:uL})-(ref{diffu:analysis:pde1:p1:erf:uR})\nfor $t$ values such that the conditions are in the vicinity of $\\pm 1$.\nFor example, $t< 5a 1.6\\cdot 10^{-2}$ makes the solution diffusion from\na step to almost a straight line. The\nprogram `diffu_erf_sol.py` shows how to compute the analytical\nsolution.',
  'title': 'Stabilizing the Crank-Nicolson method by Rannacher time stepping',
  'type': 'Exercise',
  'type_visible': True},
 {'answer': '',
  'closing_remarks': '',
  'file': ['diffu_energy.pdf'],
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': 'diffu:exer:energy:estimates',
  'no': 5,
  'solution': '',
  'solution_file': None,
  'subex': [{'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'We start with a 1D homogeneous diffusion equation with zero Dirichlet\nconditions:\n\n!bt\n\\begin{equation}\nu_t = \\alpha u_xx,  x\\in \\Omega =(0,L),\\ t\\in (0,T],\nlabel{diffu:exer:estimates:p1:pdf} \n\\end{equation}\n\n!et\n\n!bt\n\\begin{equation} \nu(0,t) = u(L,t) = 0,  t\\in (0,T],\nlabel{diffu:exer:estimates:p1:bc}\n\\end{equation}\n\n!et\n\n!bt\n\\begin{equation} \nu(x,0) = I(x),  x\\in [0,L]\nlabel{diffu:exer:estimates:p1:ic}\n\\tp\n\\end{equation}\n\n!et\nThe energy estimate for this problem reads\n\n!bt\n\\begin{equation}\n||u||_{L^2} \\leq ||I||_{L^2},\nlabel{diffu:exer:estimates:p1:result}\n\\end{equation}\n\n!et\nwhere the $||\\cdot ||_{L^2}$ norm is defined by\n\n!bt\n\\begin{equation}\n||g||_{L^2} = \\sqrt{\\int_0^L g^2dx}\\tp\nlabel{diffu:exer:estimates:L2}\n\\end{equation}\n\n!et\nThe quantify  $||u||_{L^2}$ or $\\half ||u||_{L^2}$ is known\nas the *energy* of the solution, although it is not the physical\nenergy of the system. A mathematical tradition has introduced the\nnotion *energy* in this context.\n\nThe estimate (ref{diffu:exer:estimates:p1:result}) says that the\n"size of $u$" never exceeds that of the initial condition, or\nmore equivalently, that the area under the $u$ curve decreases\nwith time.\n\nTo show (ref{diffu:exer:estimates:p1:result}), multiply the PDE\nby $u$ and integrate from $0$ to $L$. Use that $uu_t$ can be\nexpressed as the time derivative of $u^2$ and that $u_xxu$ can\nintegrated by parts to form an integrand $u_x^2$. Show that\nthe time derivative of $||u||_{L^2}^2$ must be less than or equal\nto zero. Integrate this expression and derive\n(ref{diffu:exer:estimates:p1:result}).\n\n# URL: "http://www.ann.jussieu.fr/~frey/cours/UdC/ma691/ma691_ch6.pdf"'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Now we address a slightly different problem,\n\n!bt\n\\begin{equation}\nu_t = \\alpha u_xx + f(x,t),  x\\in \\Omega =(0,L),\\ t\\in (0,T],\nlabel{diffu:exer:estimates:p2:pdf} \n\\end{equation}\n\n!et\n\n!bt\n\\begin{equation} \nu(0,t) = u(L,t) = 0,  t\\in (0,T],\nlabel{diffu:exer:estimates:p2:bc}\n\\end{equation}\n\n!et\n\n!bt\n\\begin{equation} \nu(x,0) = 0,  x\\in [0,L]\nlabel{diffu:exer:estimates:p2:ic}\n\\tp\n\\end{equation}\n\n!et\nThe associated energy estimate is\n\n!bt\n\\begin{equation}\n||u||_{L^2} \\leq ||f||_{L^2}\\tp\nlabel{diffu:exer:estimates:p2:result}\n\\end{equation}\n\n!et\n(This result is more difficult to derive.)\n\nNow consider the compound problem with an initial condition $I(x)$ and\na right-hand side $f(x,t)$:\n\n!bt\n\\begin{equation}\nu_t = \\alpha u_xx + f(x,t),  x\\in \\Omega =(0,L),\\ t\\in (0,T],\nlabel{diffu:exer:estimates:p3:pdf} \n\\end{equation}\n\n!et\n\n!bt\n\\begin{equation} \nu(0,t) = u(L,t) = 0,  t\\in (0,T],\nlabel{diffu:exer:estimates:p3:bc}\n\\end{equation}\n\n!et\n\n!bt\n\\begin{equation} \nu(x,0) = I(x),  x\\in [0,L]\nlabel{diffu:exer:estimates:p3:ic}\n\\tp\n\\end{equation}\n\n!et\nShow that if $w_1$ fulfills\n(ref{diffu:exer:estimates:p1:pdf})-(ref{diffu:exer:estimates:p1:ic})\nand $w_2$ fulfills\n(ref{diffu:exer:estimates:p2:pdf})-(ref{diffu:exer:estimates:p2:ic}),\nthen $u=w_1 + w_2$ is the solution of\n(ref{diffu:exer:estimates:p3:pdf})-(ref{diffu:exer:estimates:p3:ic}).\nUsing the triangle inequality for norms,\n\n!bt\n\\[ ||a + b|| \\leq ||a|| + ||b||,\\]\n\n!et\nshow that the energy estimate for\n(ref{diffu:exer:estimates:p3:pdf})-(ref{diffu:exer:estimates:p3:ic})\nbecomes\n\n!bt\n\\begin{equation}\n||u||_{L^2} \\leq ||I||_{L^2} + ||f||_{L^2}\\tp\nlabel{diffu:exer:estimates:p3:result}\n\\end{equation}\n\n!et'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'One application of (ref{diffu:exer:estimates:p3:result}) is to prove uniqueness\nof the solution.\nSuppose $u_1$ and $u_2$ both fulfill\n(ref{diffu:exer:estimates:p3:pdf})-(ref{diffu:exer:estimates:p3:ic}).\nShow that $u=u_1 - u_2$ then fulfills\n(ref{diffu:exer:estimates:p3:pdf})-(ref{diffu:exer:estimates:p3:ic})\nwith $f=0$ and $I=0$. Use (ref{diffu:exer:estimates:p3:result})\nto deduce that the energy must be zero for all times and therefore\nthat $u_1=u_2$, which proves that the solution is unique.'},
            {'answer': '',
             'file': None,
             'hints': ['Use integration by parts in multi dimensions:\n\n!bt\n\\[ \\int_\\Omega u \\nabla\\cdot (\\alpha\\nabla u)\\dx =\n- \\int_\\Omega \\alpha \\nabla u\\cdot\\nabla u\\dx\n+ \\int_{\\partial\\Omega} u \\alpha\\frac{\\partial u}{\\partial n},\\]\n\n!et\nwhere $\\frac{\\partial u}{\\partial n} = \\boldsymbol{n}\\cdot\\nabla u$,\n$\\boldsymbol{n}$ being the outward unit normal to the boundary $\\partial\\Omega$\nof the domain $\\Omega$.'],
             'solution': '',
             'text': 'Generalize (ref{diffu:exer:estimates:p3:result}) to a 2D/3D\ndiffusion equation $u_t = \\nabla\\cdot (\\alpha \\nabla u)$ for $x\\in\\Omega$.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': "Now we also consider the multi-dimensional PDE $u_t =\n\\nabla\\cdot (\\alpha \\nabla u)$. Integrate both sides over $\\Omega$\nand use Gauss' divergence theorem, $\\int_\\Omega \\nabla\\cdot\\boldsymbol{q}\\dx\n= \\int_{\\partial\\Omega}\\boldsymbol{q}\\cdot\\boldsymbol{n}\\ds$ for a vector field\n$\\boldsymbol{q}$. Show that if we have homogeneous Neumann conditions\non the boundary, $\\partial u/\\partial n=0$, area under the\n$u$ surface remains constant in time and\n\n!bt\n\\begin{equation}\n\\int_{\\Omega} u\\dx = \\int_{\\Omega} I\\dx\n\\tp\nlabel{diffu:exer:estimates:p4:result}\n\\end{equation}\n\n!et"},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Establish a code in 1D, 2D, or 3D that can solve a diffusion equation with a\nsource term $f$, initial condition $I$, and zero Dirichlet or\nNeumann conditions on the whole boundary.\n\nWe can use (ref{diffu:exer:estimates:p3:result})\nand (ref{diffu:exer:estimates:p4:result}) as a partial verification\nof the code. Choose some functions $f$ and $I$ and\ncheck that (ref{diffu:exer:estimates:p3:result}) is obeyed at any\ntime when zero Dirichlet conditions are used.\nIterate over the same $I$ functions and check that\n(ref{diffu:exer:estimates:p4:result}) is fulfilled\nwhen using zero Neumann conditions.'},
            {'answer': '',
             'file': None,
             'hints': [],
             'solution': '',
             'text': 'Make a list of some possible bugs in the code, such as indexing errors\nin arrays, failure to set the correct boundary conditions,\nevaluation of a term at a wrong time level, and similar.\nFor each of the bugs, see if the verification tests from the previous\nsubexercise pass or fail. This investigation shows how strong\nthe energy estimates and the estimate (ref{diffu:exer:estimates:p4:result})\nare for pointing out errors in the implementation.'}],
  'text': 'idx{energy estimates (diffusion)}\n\nThis project concerns so-called *energy estimates* for diffusion problems\nthat can be used for qualitative analytical insight and for\nverification of implementations.',
  'title': 'Energy estimates for diffusion problems',
  'type': 'Project',
  'type_visible': True}]