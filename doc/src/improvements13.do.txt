#TITLE: Course ambitionsss and future improvements

======= Long-term goals =======

 * The goal of INF5620 is to provide a series of modules with all the
   fundamental building blocks for solving PDE problems by finite
   difference, finite element, and finite volume methods, but with
   particular emphasis on finite element methods.
 * A subset of the modules will constitute the INF5620 course.
 * A hope is to migrate the first modules on finite difference methods
   to the 2nd semester in the MIT and FAM bachelor programs at UiO.
 * Other bachelor courses, especially in physics and mechanics,
   can hopefully make use of some modules
   as background material for PDE-based projects.
 * INF5620 can easily adapt the composition of modules to a changing
   environment (see below for some challenges connected to this).
 * The philosophy of each module is to
   * present a gentle and *intuitive* introduction to the subject,
   * use the *smplify-understand-generalize* approach,
   * use as simple mathematics as possible,
   * provide all nuts and bolts necessary to get the numerics to
     play in software,
   * introduce appropriate notation such that the step from mathematics
     to software is as small as possible,
   * explore the quality of numerics through exact solutions of
     the discrete equations (such as Fourier wave components)
     and reach more detailed insight than what is possible with
     traditional asymtotic convergence theories (such truncation
     error analysis),
   * emphasize program verification through MMS and other methods,
   * understand the how PDEs arise and are applied to study
     physical problems.
   Not all existing modules are there yet, but this is work in progress.
 * It is a clear ambition to publish most modules in one or more books,
   yet with HTML-based versions for various electronic devices.
 * Another ambition is to make the modules open and accessible for other
   universities and self study.
 * The focus will remain on the introductory and fundamental material,
   ideally in a form accessible with a minimum of mathematics and
   programming. There is a lot of advanced literature available once
   the fundamentals are understood.

!bsummary Ultimate goal
Students at UiO/MN know how to solve all the PDEs they have seen.
!esummary


## Cartoon: Here is a PDE, can you solve it? Yes, we can!

======= Planned improvements =======

===== Bitbucket/GitHub =====

Communicating through a version-controlled repo is in theory a good
idea because it easily handles a lot of files - and this also how
master students should continue to work with their thesis.

Experience 2013:

 * With many students ($>10$) the teachers
   need a much more streamlined setup with much less freedom
   and no tedious and error-prone clicking in web interfaces.
 * Due to a technical misunderstanding and then a shortcoming of
   the Bitbucket web interface, the feedback on oblig2 was delayed
   by more than a week.

Suggestions:

 * Choose GitHub or Bitbucket, probably the latter. Require Git as
   version control system.
 * Make streamlined setup with *strict naming conventions* for directories,
   files, student information (the full name for instance...), etc.
 * Provide a simple step-by-step recipe for the student in INF5620.
 * Develop more scripts to automated forking, fetching upstream,
   pushing to fork and pull requests. (Need to explore the Bitbucket
   API to avoid manual interaction with web pages, but it seems
   possible).
 * Need some kind of notification when a student is finished with
   a project (now we have to fetch upstream from the student account
   and look for something that can be the name of a new project...).

__Remark.__ Devilry plans to develop a model that is very similar
to the setup with Bitbucket/GitHub in INF5620, and Devilry might then
be a more user-friendly and automated platform than Bitbucket.

===== Compulsory exercises =====

Experience 2013:

 * With 40-50 students the work with
   feedback on compulsory exercises is too comprehensive and takes too
   much time. (Scaling up with more teaching assistants is probably
   not an option in a 5xxx course.)

Suggestions:

 * Keep oblig1 as is to ensure familiarity with basic finite differences,
   programming and (in particular) testing.
 * Reduce the amount of work in oblig2 and define the rest and more as
   an INF5631 project (5 p).
 * Let two and two students give feedback on two projects with
   the teacher available in the room. This can happen the week after
   the deadline.
   (Technical note: students can fork the teacher's fork of
   the students private repo.)
 * Use this setup for FEM for the wave equation and the default version
   of the final project.
 * The teacher gives feedback to students who define their own final project.

===== Lectures =====

Setup 2013:

 * Lectures have switched between slides and handwritings.
 * Handwritings are usually detailed and ensure a slow progression.
 * Slides allow flexibility: quick overview or more detailed treatment,
   with (much) less errors.
 * Slides as reading material (study guides) are meant
   as a first overview and as a repetition of the key points.

Experience 2013:

 * 4h per week are needed for lectures - that's quite much and it's
   all a one-way communication.
 * Most of theory is example-driven, yet it would be good to solve
   more plain exercises. And more important: there should be time
   for more individual guidance.

Suggestions:

 * Short-term alternative: more of the topics are treated as structured
   self-study with a clear plan how on how the students should work.
 * More long-term alternative: all the lectures are available in
   video format and the face-to-face teaching is primarily used for
   detailed explanations, problem solving, and supervision in project.
 * Also: videos could be in two versions, one quick overview and one
   detailed treatment.
 * 2 h lectures on very quick theory overview, students-driven questions,
   and solving exercises.
 * 2 h lab where the teacher is available for individual quidance.

!bwarning Preliminary experience with self-study of theory (video or reading)

 * The lectures become more demanding as we dive deeper into details
   in theory or problems and develop a two-way communication.
 * The lectures require preparation, with a likely danger that the
   lectures are meaningful only for a fraction of the students.

Recall: most lectures in the traditional one-way communication format are
meaningful and quite easy to follow without prepratations.
!ewarning
