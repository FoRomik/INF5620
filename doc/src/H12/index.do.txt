#TITLE: INF5620 Numerical Solution of Partial Differential Equations

# #ifdef EXAM
===== Exam =====

Out of 18 candidates who took the exam, 7 got A, 6 got B, 2 got C, and
all three PhD students passed. The exceptional result of A and B for
16 out of 18 is first of all due to extensive and very successful
preparations - and perhaps a small component of luck in that 11 of the
A and B candidates presented Problem 2 or 3 (!).  The die was not
completely fair in the 18 trials as we had Problem 4 twice, Problem 1
once, Problem 5 once, and Problem 6 three times.
# #endif

===== News =====

 * Jan 3: There will be a new continuation course of INF5620
   in the spring semester: "INF5650": "http://www.uio.no/studier/emner/matnat/ifi/INF5650/index.xml", lectured by Anders Logg and Kent-Andre Mardal.
   One can also extend INF5620 with a project: "INF5631": "http://www.uio.no/studier/emner/matnat/ifi/INF5631/index-eng.xml".
 * Dec 21: I have a *long* list of extensions and improvements for
   INF5620, but any feedback of any kind is much appreciated.
   Send mail to hpl@simula.no.
 * Dec 13: We meet for discussing the exam, the final project, and
   whatever - at the normal time 14:15 in the normal Logo room.
 * Dec 12: Thanks to a suggestion by Christoffer, you will get 10 extra
   min for preparing the exam topic. This new text was added to
   the "exam": "H12.html" page:
   *After each presentation, the next candidate can throw the die and
   thereby get about 10 min to collect the thoughts before
   presenting the assigned topic.*
 * Dec 11: Small fixes in the "exam": "H12.html" (typos and clarification
   of various items students have asked about). Corrections in the
   notes about the finite element method (thanks to Andreas H and Jarle)
   as well as the diffusion equation (thanks to Anders H).
 * Dec 6: Fixed missing g in Problem 1 in the exam (thanks to Jarle).
   Fixed typos in Navier-Stokes notes and expanded explanation of
   integration by parts and boundary integrals (thanks to Anders H).
 * Dec 1: Students are encouraged to collaborate on the exam problems
   and to rehearse presentations in groups.
 * Nov 29: Everybody who wants to take the exam must send an email
   to hpl@simula.no with the preferred exam date. A good argument
   is needed to sign up for Friday, Dec 21 (other exam(s) close in
   time, for instance). We plan for a few on Wednesday, Dec 19, and most on
   Thursday, Dec 20. The lists on Studentweb with names and dates are
   invalid - we make our own lists.
 * Nov 29: The last ordinary lecture was on Nov 29, but we will meet
   again on Dec 13, 14:15, in the usual Logo room to speak about
   the exam. Help with physical interpretations in the exam problems,
   various mathematical details, etc. will be provided.
 * Nov 29: Suggestions for "the exam topics": "H12.html" are published.
 * Nov 29: Notes about solving the Navier-Stokes equations are
   published, see the "course notes page": "notes.html".
 * Nov 23: A suggested "default choice": "default_project.html"
   for the final project has been formulated.
 * Nov 23: The variational formulation of the equation for "elastic
   waves": "literature/Linear_elasticity.pdf", by Ingeborg and Nina,
   is available.
 * Nov 21: Recall the lecture *today, Wednesday*, 14:15-16:00, in room Shell.
 * Nov 21: Notes on the finite element method now also contains
   "material": "http://hplgit.github.com/INF5620/doc/notes/main_fem.html#fem:sys" (takes time to load now...) on variational formulation of *systems of PDEs*.
 * Nov 21: Many typos are corrected in the notes (and brief slides) on
   the finite element method (thanks to Imran!!).
 * Nov 16: Next lecture is on *Wednesday, 14:15-16:00, in room Shell*.
   The "overview of lectures": "lectures.html" is updated.
 * Nov 15: Democratic procedures resulted in an *oral* exam on Dec 19, 20, 21.
 * Nov 15: Added notes about discretization of the diffusion equation
   and analysis of the schemes.
 * Nov 12: Added an excellent book on "solving linear systems": "literature/linear_solver_templates.pdf". This material will not be lectured, but the book is a fine reference on iterative solution of sparse linear systems that arise from discretization of PDEs by finite element, difference, and volume methods.
 * Nov 8: A "highly recommended finite element project": "oblig2.html"
   is formulated. Some may choose variants and extensions of this
   project as theme for the final self-composed project.
 * Nov 3: Numerous errors in the B(x) boundary functions in the
   slide notes from the Nov 1 lectures - these are corrected.
 * Nov 1: Recall we have 4 h lecture today, 14.15-16.00 to digest
   a lot of the finite element method.
 * Oct 31: The notes on the finite element method are significantly
   extended. Also the summary for the lectures.
 * Oct 26: Material for Dag Sverre Seljebotn's lecture is available
   from "GitHub": "https://github.com/dagss/computer-tutorial".
 * Oct 17: _On Nov 1_ will we have a 4 h lecture from 14.15-18.00 (!).
   Mostly on finite element methods.
 * Oct 17: some comments on the projects are inserted below.
 * Oct 17: Guest lecture by Dag Sverre Seljebotn _on Oct 25_: How to program
   today's and tomorrow's computers. Part I 14.15-15.00 will deal
   with basic issues in compiled languages. Those who have a good
   knowledge of C might find this boring (according to Dag Sverre).
   Part II 15.15-16.00 is about modern parallel hardware, from laptops
   to supercomputers, and what everyone should know about that.
   This material is not directly relevant for the exam, but still very
   knowledge that is important in thesis work and later in industry.
 * Oct 17: New material on finite element methods is out
   ("notes": "notes.html" and "lectures": "lectures.html").
 * Oct 12: Some have problem with missing `function_UI` in their
   `scitools`. Two remedies: 1) just remove everything with `function_UI`;
   2) check out `scitools` source code from the Mercurial repository at
   URL:"https://github.com/hplgit/scitools", `cd scitools`, run
   `sudo python setup.py install`. Point 2) ensures that you have the
   latest possible version of `scitools`.
 * Oct 4: Formulation of the "first compulsory project": "oblig1.html" in
   INF5620 is ready. Imran takes the lead to create groups and distribute
   topics between groups.
 * Oct 4: "Course notes": "notes.html" for solving the wave equations
   are published. These are useful for the compulsory project.
 * Sep 16: From now on you need to send in files through
   a project hosting site, see note about "delivery of
   exercises and projects": "exercise_delivery.html".
 * Sep 13: Significant amount of typos corrected in course notes.
   Always to a `git pull origin master` in the INF5620 repo before
   reading any material - then you have the latest version.
 * Sep 11: Corrected large amounts of typos in the course notes.
 * Sep 9: Added a "plan": "plan.html" for the course.
 * Sep 7: "Course notes": "notes.html" are frequently updated.

===== Homework =====

The solution of most exercises is a Python source code file with
specified filename. Some theoretical exercises have a filename without
extension. Here one may use LaTeX and produce a PDF file, or write by
hand and scan the papers, or make a `sympy` program with statements
and comments.

=== Nov 29 ===

Exercises on finite elements for nonlinear differential equations, see
the "slides": "literature/slides5620_12.pdf" at the end of the first
section on *Nonlinear Problems*. Hand-calculations will be presented
in the lecture. The first three problems also appear on the exam
in a bit extended form.

=== Nov 8 ===

All the Exercises 17-27 are relevant, and the sequence of these exercises
follow a natural progression and complexity and work. You are encouraged to
submit solutions through a Bitbucket or GitHub repository.

=== Nov 1 ===

It is highly recommended to do some exercises from the finite element material:
Exercise 3 (vector space refresher), 4 (least squares computations),
8 (numbering of nodes and elements), 9 (matrix sparsity),
10 (finite element algorithm by hand), 15 (2D basis functions).
Exercises 11 and 12 (more work) are also illustrative (can use the
symbolic software to compute). Exercise 13 contains an important result
regarding accuracy of finite element approximations.

=== Brief comments on the first project (wave equation in 2D) ===

  * Many have a lot of garbage (redundant) files in the repository.
    Either have a `.gitignore` file for automatically
    avoiding adding such files, or bring manually in every file
    that needs to be there (for example, `.tex` is key, but not `.aux`, `.log`,
    `.dvi`, etc.).
  * Many have the new program as a mix of new functions and
    irrelevant functions from `wave2D_u0.py`. Find a new filename and
    remove everything that does not have a meaning for project
    (like `test_quadratic` - it cannot be used with the du/dn=0
    boundary conditions).

=== Sep 27 ===

No group will present any exercise. Those who want can hand in
any exercise.

=== Sep 13 and 20 ===

"Exercises 24":
"http://hplgit.github.com/INF5620/doc/notes/decay-sphinx/main_decay.html#exercise-24-make-a-program-for-vertical-motion-in-a-fluid",
25, 26. Anyone who hands in these before the presentation of the
solution on Thursday, Sep 13, will get 1 credit point per exercise. A
student group (Yapi and friends) will present the solution.

Exercise 27 can also be solved. Note that you have to hand in exercises
through Bitbucket or GitHub, see "delivery of
   exercises and projects": "exercise_delivery.html".

Exercise 15-17 will be presented on Sep 20 (by Nina and friends).

===== Principal resources =====

 * "Quick summary of lectures": "lectures.html"
 * "Preliminary course notes": "notes.html"
 * "About the course": "about.html"
 * Test of your background for the course: "PDF": "background.pdf", "HTML": "background.html"
 * Download files for the course from "GitHub": "http://hplgit.github.com/INF5620/doc/web/git/index.html" (`git clone git@github.com:hplgit/INF5620.git`; update frequently: `cd INF5620; git pull origin master`)
 * Principal lecturer: "Hans Petter Langtangen": "http://simula.no/~hpl/", `hpl at simula.no`, phone: 99 53 20 21

# * "Old textbook for INF5620": "http://simula.no/~hpl/INF5620/books/Langtangen_TCSE1.pdf" (outdated)


===== Other resources =====

 * "How to run Ubuntu in a virtual machine on Mac/Windows": "http://hplgit.github.com/teamods/ubuntu/vmware/index.html"
 * "FEniCS tutorial": "http://simula.no/~hpl/homepage/fenics-tutorial/release-1.0/index.html"
 * How to use GitHub or Bitbucket for project work: "HTML": "http://hplgit.github.com/teamods/bitgit/html/index.html", "PDF": "http://hplgit.github.com/teamods/bitgit/Langtangen_bitgit.pdf"
 * Scientific computing with Python:
   * "A worked example on basic scientific computing with Python": "http://hplgit.github.com/teamods/bumpy/html/vibcase.html" (vehicle on bumpy road)
   * "Python Scientific Lecture Notes": "http://scipy-lectures.github.com/index.html"
   * "SciPy cookbook": "http://www.scipy.org/Cookbook"
   * "NumPy manual": "http://docs.scipy.org/doc/numpy/"
   * "SciPy documentation": "http://docs.scipy.org/doc/scipy/reference/"
   * "SciKits: add-on packages to SciPy": "http://scikits.appspot.com/scikits"
 * Symbolic computing:
   * "Short intro to SymPy": "http://scipy-lectures.github.com/advanced/sympy.html"
   * "SymPy tutorial at SciPy 2011": "http://mattpap.github.com/scipy-2011-tutorial/html/basics.html"
   * "Official SymPy tutorial": "http://docs.sympy.org/dev/tutorial.html"
   * "SymPy quick examples": "https://github.com/sympy/sympy/wiki/Quick-examples"
   * "SymPy FAQ": "https://github.com/sympy/sympy/wiki/Faq"
   * "Sage documentation": "http://www.sagemath.org/doc/reference/index.html"
   * "SymPy vs Sage": "https://github.com/sympy/sympy/wiki/SymPy-vs.-Sage"
 * "Examples on writing scientific reports": "http://hplgit.github.com/INF5620/doc/writing_reports/index.html"
 * "Sphinx quick reference": "http://people.ee.ethz.ch/~creller/web/tricks/reST.html"
 * "Ultra-quick Unix need-to-know": "http://www.ifi.uio.no/~inf1100/QuickUnix.html"
 * "Ultra-quick Emacs need-to-know": "http://www.ifi.uio.no/~inf1100/QuickEmacs.html"


# "Machine learning in Python": "http://scikit-learn.org/stable/"

# * "Exam 2011": "..."

