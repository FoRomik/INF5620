#TITLE: INF5620 Numerical Solution of Partial Differential Equations

# #ifdef EXAMRESULTS
===== Exam =====

Out of 18 candidates who took the exam, 7 got A, 6 got B, 2 got C, and
all three PhD students passed. The exceptional result of A and B for
16 out of 18 is first of all due to extensive and very successful
preparations - and perhaps a small component of luck in that 11 of the
A and B candidates presented Problem 2 or 3 (!).  The die was not
completely fair in the 18 trials as we had Problem 4 twice, Problem 1
once, Problem 5 once, and Problem 6 three times.
# #endif

===== Exam =====

The exam 2013 will be on Dec 16, 17, and 18.
Send email to "`hpl@simula.no`": "mailto:hpl@simula.no") if you
are not on the "list of candidates": "exam_candidates.html".


===== Important links =====

 * "Summary of lectures": "lectures.html" (updated before and after each lecture)
 * "Course notes and slides from lectures": "notes.html"

===== News =====

 * _Nov 14:_ About FEniCS installation on Ubuntu: go to URL: "http://fenicsproject.org/download/ubuntu_details.html" and run the commands under *Ubuntu PPA*. This will give you access to version 1.1 that is compatible with the new tutorial.
 * _Nov 13:_ The FEniCS tutorial is updated for FEniCS v1.1:
   "PDF for printing and electronic view": "../pub/fenics_tutorial1.1-4print.pdf", "Sphinx (one big file)": "../pub/fenics_tutorial1.1-1/index.html", "Sphinx (multiple files)": "../pub/fenics_tutorial1.1/index.html" + "all programs referred to in the tutorial": "../pub/fenics_tutorial_examples.tar.gz".
   Use this new version and not the official FEniCS tutorial since some syntax differs between v1.0 and v1.1. Report any problems to URL: "mailto:hpl@simula.no".
 * _Nov 11:_ Everybody needs to do some final project where a PDE is solved
   and the quality of the numerial method is investigated. We recommend
   to choose a PDE problem that is useful for a master/phd thesis, but
   we also have a "default project": "default_project.html"
   with important elements from the course (and for the exam).
   Deadline for the project: Dec 17 (but do it before the preparations for
   the exams start, around Dec 1).
 * _Nov 8:_ We have had some technical problems with the feedback on "oblig2". Some have merged the fork and some have received a pull request, but some have not received a pull reqest or been notified about an updated fork. Send email to `hpl@simula.no` if you have not received feedback on "oblig2".
 * _Nov 3:_ Feedback (with an unfortunate and regrettable delay)
   on "oblig2" has been pushed back
   to the repositories. Very much good work! Send mail to
   "hpl@simula.no": "mailto:hpl@simula.no" if you cannot see the
   feedback file in the repository (most of our interaction with git
   is automated, but the overall procedure is not yet fool proof).
 * _Oct 27:_ The third "compulsory" exercise is "published": "oblig3.html"
   ("PDF": "oblig3.pdf"). It is not a requirement to do it, but
   highly recommended. Nov 3: Some smaller adjustments of the text.
 * _Oct 16:_ Tentative exam dates are set to Dec 16-18 (all three days).
 * _Oct 13:_ There will be assistance with the compulsory exercise
   10.15-12.00 on Monday, October 14.
 * _Oct 8:_ There was a typo in the ansatz for damped waves in the
   compulsory exercise: the term $e^{-bt}$ should be $e^{-ct}$, where
   $c$ is a constant to be determined (it turns out that $c=b/2$,
   so $e^{-bt}$ would never fit as a solution).
 * _Oct 3:_ A feasible way of obtaining an exact discrete solution
   in the compulsory exercise has been inserted as a hint.
 * _Oct 2_: The computation of an analytical solution for damped, standing
   waves turned out to cause difficulties. Some hints on how to proceed
   are now inserted in the compulsory exercise.
 * _Sep 29_: The lecture on Monday, Sep 30, will be about parallel
   computing and given by Professor Xing Cai. See the
   "overview of lectures": "lectures.html" for
   links to slides and a short introduction to parallel computing.
 * _Sep 23_: The "2nd compulsory exercise": "oblig2.html" is published.
 * _Sep 23_: More updates of the "wave equation notes and slides": "notes.html" are published.
 * _Sep 23_: Exercises for Sep 25 and week 40:
   * "Exercise 1": "http://hplgit.github.io/INF5620/doc/pub/sphinx-wave/._part0002_main_wave.html#exercise-1-simulate-a-standing-wave" (visualize errors in a standing wave)
   * "Exercise 14": "http://hplgit.github.io/INF5620/doc/pub/sphinx-wave/._part0009_main_wave.html#exercise-14-simulate-waves-on-a-non-homogeneous-string" (waves on a non-homogeneous string)
   * "Exercise 7": "http://hplgit.github.io/INF5620/doc/pub/sphinx-wave/._part0003_main_wave.html#problem-7-explore-symmetry-boundary-conditions" (symmetry boundary conditions)
   * "Exercise 8": "http://hplgit.github.io/INF5620/doc/pub/sphinx-wave/._part0003_main_wave.html#exercise-8-send-pulse-waves-through-a-layered-medium" (numerical noise due to discontinuous wave velocity)
   * "Exercise 6": "http://hplgit.github.io/INF5620/doc/pub/sphinx-wave/._part0003_main_wave.html#exercise-6-find-the-analytical-solution-to-a-damped-wave-equation" (solve a damped wave equation analytically)
   * "Exercise 20": "http://hplgit.github.io/INF5620/doc/pub/sphinx-wave/._part0009_main_wave.html#problem-20-implement-open-boundary-conditions" (open boundary conditions)
   * "Exercise 17": "http://hplgit.github.io/INF5620/doc/pub/sphinx-wave/._part0009_main_wave.html#exercise-17-simulate-spherical-waves" (spherical waves simulated as 1D Cartesian waves)
 * _Sep 19_: Material on solving wave equations is released.
 * _Sep 18_: Joakim's feedback on the first compulsory exercise is
    sent out as pull requests on Bitbucket and GitHub (just accept it).
    If you have not received a pull request, send an email to
    hpl@simula.no, and/or follow link to forked repo and read the
    feedback file there.
 * _Sep 16_: Joakim Bø has gone through the files handed in for
   the first compulsory exercise. The feedback will be sent as
   pull requests (just accept the request - only a new file will
   be added to your repo).
 * _Sep 4 and 5:_ Performed some minor edits of the text and data in
   "Exercise 24": "http://hplgit.github.io/INF5620/doc/pub/sphinx-decay/main_decay.html#exercise-24-make-a-program-for-vertical-motion-in-a-fluid"
   and "Project 1": "http://hplgit.github.io/INF5620/doc/pub/sphinx-decay/main_decay.html#project-1-simulate-parachuting". (If you have already done the
   compulsory project you do not need to pay attention to these edits.)
 * _Sep 4:_ "Text and slides": "notes.html" for *Finite difference methods
   for vibration problems* are published.
 * _Sep 2/4:_ The problem lab is on Monday, and Wednesday has 2 h
   ordinary lectures (only this week). Joakim leads the Monday session.
 * _Aug 29:_ How can you install all needed software in INF5620 on
   your machine?

  * Alternative 1: Run a full graphical Ubuntu platform in a VMWare
    Fusion machine. We have detailed "instructions": "http://hplgit.github.io/teamods/ubuntu/vmware/index.html". You will then have to
    install a "list of packages recommended for INF5620": "software_packages.html" which on Ubuntu are installed by an "installation script": "https://raw.github.com/hplgit/vagrantbox/master/doc/src/vagrant/src-vagrant/install_rich.sh".
  * Alternative 2: Run Ubuntu as a Vagrant box in a terminal window.
    This box comes with all INF5620 software.
    "Instructions": "vagrant_inf5620.html" are in an untested and
    preliminary state.
  * Alternative 3: Do a manual installation according to
    a "list of packages recommended for INF5620": "software_packages.html".

 * _Aug 26:_ The "background.pdf" file contained some embarrassing typos
   that are now corrected.
 * _Aug 26:_ Bitbucket or GitHub for INF5620 work?
  * Main disadvantage of GitHub: You have to apply for a "student plan with free private repos": "https://github.com/edu"
  * Main advantage of Bitbucket: You can have an unlimited number of
    private repos with up to 5 collaborators (probably sufficient for INF5620).
  * Main advantage of GitHub: You can have repo-specific web pages
    (probably not important in INF5620).
  * Main disadvantage of Bitbucket: You cannot have repo-specific web pages.
 * _Aug 26:_ The compulsory exercises are reformulated to be more precise,
   and they also contain an extra question (check the links below) on how
   to construct an exact linear solution of the discrete equations.
 * First compulsory exercise: either "Exercise 24": "http://hplgit.github.io/INF5620/doc/pub/sphinx-decay/main_decay.html#exercise-24-make-a-program-for-vertical-motion-in-a-fluid" or "Project 1": "http://hplgit.github.io/INF5620/doc/pub/sphinx-decay/main_decay.html#project-1-simulate-parachuting". Deadline: Sep 9.
 * Here are the rules for compulsory exercises/projects in INF5620, H13:

  * Deliver files as part of a private "repository at GitHub or Bitbucket": "http://hplgit.github.com/teamods/bitgit/html/index.html".
  * Work in groups of two or individually.
  * Use *one* private repo for *all* exercises/projects in INF5620 this
    semester. If you work in a group, collaborate with one common repo.
  * Add read access for `hplbit` in the private repo
    on Bitbucket or `hplgit` on GitHub. (This will automatically notify
    the lecturer about the repo.)
  * Write your (the owner's) full name in a `README*` file in top directory.
  * Include collaborators in the `README` file in
    or write their names as a comment in the various files if the names
    differ between the projects.
  * Hans Petter will fork your repo. He or Joakim Bø will go through
    the relevant files and create a new file with comments. The student
    will get a pull request with the changes in the repo. Normally,
    just accepting the pull request brings the comment file into your repo.
    Make sure you use the file names given in the exercises.
* Teaching 2013 in room Postscript in Ole-Johan Dahls hus:
   * Mondays 10.15-12.00: Lectures.
   * Wednedays 08.15-09.00: Problem lab.
   * Wednedays 09.15-10.00: Exercises and/or lectures.

===== Homework =====

I haven't managed to synchronize the list here with the
"lectures": "lectures.html" page where I actually update the info
on exercises. Go to "lectures": "lectures.html" to see which exercises
we have solved and plan to solve.

===== Principal resources =====

 * "About the course": "about.html"
 * "Summary of lectures": "lectures.html" (updated before and after each lecture)
 * "Preliminary course notes and slides from lectures": "notes.html"
 * Test of your background for the course: "PDF": "background.pdf", "HTML": "background.html"
 * Download files for the course from "GitHub": "http://hplgit.github.com/INF5620/doc/web/git/index.html": `git clone https://github.com/hplgit/INF5620.git`; update frequently: `cd INF5620; git pull origin master` (do not fork and send pull requests for typos or errors in programs as the `INF5620` files are automatically processed from another source of files)
 * Principal lecturer: "Hans Petter Langtangen": "http://simula.no/~hpl/", `hpl at simula.no`, phone: 99 53 20 21
 * Teaching assistant: Joakim Bø: `joakim.bo at mn.uio.no`

# * "Old textbook for INF5620": "http://simula.no/~hpl/INF5620/books/Langtangen_TCSE1.pdf" (outdated)


===== Other resources =====

 * Exam 2012: "HTML": "H12.html" or "PDF": "H12.pdf"
 * How to install all needed software in INF5620 on
   your machine:

  * Alternative 1: Run a full graphical Ubuntu platform in a VMWare
    Fusion machine (or another virtual machine like VirtualBox or VMWare Player. We have detailed "instructions": "http://hplgit.github.io/teamods/ubuntu/vmware/index.html". You will then have to
    install a "list of packages recommended for INF5620": "software_packages.html" which on Ubuntu are installed by an "installation script": "https://raw.github.com/hplgit/vagrantbox/master/doc/src/vagrant/src-vagrant/install_rich.sh".
  * Alternative 2: Run Ubuntu as a Vagrant box in a terminal window.
    This box comes with all INF5620 software.
    "Instructions": "vagrant_inf5620.html" are still in an untested and
    preliminary state.
  * Alternative 3: Do a manual installation according to
    a "list of packages recommended for INF5620": "software_packages.html".

 * Updated FEniCS tutorial (for FEniCS v1.1):
   "PDF for printing and electronic view": "../pub/fenics_tutorial1.1-4print.pdf", "Sphinx (one big file)": "../pub/fenics_tutorial1.1-1/index.html", "Sphinx (multiple files)": "../pub/fenics_tutorial1.1/index.html". This document replaces the official FEniCS tutorial. Also download  "all programs referred to in the tutorial": "../pub/fenics_tutorial_examples.tar.gz".
 * How to use GitHub or Bitbucket for project work: "HTML for online viewing": "http://hplgit.github.com/teamods/bitgit/html/index.html", "PDF for printing": "http://hplgit.github.com/teamods/bitgit/Langtangen_bitgit_4print.pdf"
 * Scientific computing with Python:
   * "A worked example on basic scientific computing with Python": "http://hplgit.github.com/teamods/bumpy/html/vibcase.html"
   * "Lectures on scientific computing with Python": "https://github.com/jrjohansson/scientific-python-lectures"
   * "Python Scientific Lecture Notes": "http://scipy-lectures.github.com/index.html"
   * "SciPy cookbook": "http://www.scipy.org/Cookbook"
   * "NumPy manual": "http://docs.scipy.org/doc/numpy/"
   * "SciPy documentation": "http://docs.scipy.org/doc/scipy/reference/"
   * "SciKits: add-on packages to SciPy": "http://scikits.appspot.com/scikits"
 * Symbolic computing:
   * "Sympy - Symbolic algebra in Python": "http://nbviewer.ipython.org/urls/raw.github.com/jrjohansson/scientific-python-lectures/master/Lecture-5-Sympy.ipynb"
   * "Short intro to SymPy": "http://scipy-lectures.github.com/advanced/sympy.html"
   * "SymPy tutorial at SciPy 2013": "http://conference.scipy.org/scipy2013/tutorial_detail.php?id=101"
   * "Official SymPy tutorial": "http://docs.sympy.org/dev/tutorial.html"
   * "SymPy quick examples": "https://github.com/sympy/sympy/wiki/Quick-examples"
   * "SymPy FAQ": "https://github.com/sympy/sympy/wiki/Faq"
   * "Sage documentation": "http://www.sagemath.org/doc/reference/index.html"
   * "SymPy vs Sage": "https://github.com/sympy/sympy/wiki/SymPy-vs.-Sage"
 * "Examples on writing scientific reports": "http://hplgit.github.io/teamods/writing_reports/index.html"
 * "Sphinx quick reference": "http://people.ee.ethz.ch/~creller/web/tricks/reST.html"
 * "Ultra-quick Unix need-to-know": "http://www.ifi.uio.no/~inf1100/QuickUnix.html"
 * "Ultra-quick Emacs need-to-know": "http://www.ifi.uio.no/~inf1100/QuickEmacs.html"


# "Machine learning in Python": "http://scikit-learn.org/stable/"

# * "Exam 2011": "..."

